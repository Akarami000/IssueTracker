// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  //output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  //Relationship
  projects Project[] @relation("UserProjects")
  createdIssues Issue[] @relation("CreatedIssues")
  assignedIssues Issue[] @relation("AssignedIssues")
  comments Comment[] 
}

model Project {
  id          String   @id @default(uuid())
  name        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  //Relationship
  ownerId     String
  owner       User     @relation("UserProjects", fields: [ownerId], references: [id])
  issues      Issue[] 
}
model Issue {
  id          String   @id @default(uuid())
  title       String
  description String?
  status      Status   @default(open)   // ‚Üê use the enum
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  projectId   String
  project     Project  @relation(fields: [projectId], references: [id])
  createdById String
  createdBy   User     @relation("CreatedIssues",  fields: [createdById], references: [id])
  assigneeId  String?
  assignee    User?    @relation("AssignedIssues", fields: [assigneeId], references: [id])
  comments    Comment[]
}

model Comment {
  id         String   @id @default(uuid())
  content     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  //Relationship
  issueId     String
  issue       Issue    @relation(fields: [issueId], references: [id])
  authorId    String
  author      User     @relation(fields: [authorId], references: [id])
}

enum Status { 
  open
  in_progress
  closed
}